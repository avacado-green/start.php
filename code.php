class A {
public function foo() {
static $x = 0;
echo ++$x;
}
}
$a1 = new A();
$a2 = new A();
$a1->foo();
$a2->foo();
$a1->foo();
$a2->foo();

Что он выведет на каждом шаге? Почему?

Первый вызов a1->foo(): выведет 1.

Второй вызов a2->foo(): выведет 2.

Третий вызов a1->foo(): выведет 3.

Четвертый вызов a2->foo(): выведет 4.

В методе foo используется статическая переменная $x. Статические переменные сохраняют свое значение между вызовами метода, инициализируются только один раз и относятся к классу, а не к конкретному экземпляру.

Когда создаются объекты $a1 и $a2 класса A, они оба имеют доступ к одной и той же статической переменной $x.

Первый вызов $a1->foo(): Статическая переменная $x инициализируется значением 0. Операция ++$x увеличивает значение $x на 1 и выводит 1.

Второй вызов $a2->foo(): Статическая переменная $x уже инициализирована и имеет значение 1. Операция ++$x увеличивает значение $x на 1 и выводит 2.

Третий вызов $a1->foo(): Статическая переменная $x имеет значение 2. Операция ++$x увеличивает значение $x на 1 и выводит 3.

Четвертый вызов $a2->foo(): Статическая переменная $x имеет значение 3. Операция ++$x увеличивает значение $x на 1 и выводит 4.

class A {
public function foo() {
static $x = 0;
echo ++$x;
}
}
class B extends A {
}
$a1 = new A();
$b1 = new B();
$a1->foo();
$b1->foo();
$a1->foo();
$b1->foo();

Что он выведет теперь?

Первый вызов $a1->foo(): выведет 1.

Второй вызов $b1->foo(): выведет 1.

Третий вызов $a1->foo(): выведет 2.

Четвертый вызов $b1->foo(): выведет 2.

В методе foo используется статическая переменная $x. Статические переменные сохраняют свое значение между вызовами метода, инициализируются только один раз и относятся к конкретному методу внутри класса.

Когда создаются объекты $a1 и $b1 классов A и B соответственно, они наследуют метод foo с отдельными статическими переменными $x для каждого класса.

Первый вызов $a1->foo(): Статическая переменная $x инициализируется значением 0 в классе A. Операция ++$x увеличивает значение $x на 1 и выводит 1.

Второй вызов $b1->foo(): Статическая переменная $x инициализируется значением 0 в классе B (отдельно от класса A). Операция ++$x увеличивает значение $x на 1 и выводит 1.

Третий вызов $a1->foo(): Статическая переменная $x в классе A имеет значение 1. Операция ++$x увеличивает значение $x на 1 и выводит 2.

Четвертый вызов $b1->foo(): Статическая переменная $x в классе B имеет значение 1. Операция ++$x увеличивает значение $x на 1 и выводит 2.